From 7df3a4cd9b091960ccbc7b6d5e256ac76a7f55b8 Mon Sep 17 00:00:00 2001
From: Erik Schumacher <erik.schumacher@iris-sensing.com>
Date: Fri, 11 Oct 2024 09:18:16 +0000
Subject: [PATCH] Fix i.MX93 eqos quirk by configuring the speed during reset

By configuring the interface speed during reset the i.MX93 will no
longer get stuck when operating in RMII mode.
See commit b536f32b5b034f592df0f0ba129ad59fa0f3e532 in linux kernel

Upstream-Status: Pending (this patch is i.MX93 specific, a more
sophisticated patch could be send upstream)

Signed-off-by: Erik Schumacher <erik.schumacher@iris-sensing.com>
---
 drivers/net/dwc_eth_qos.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/net/dwc_eth_qos.c b/drivers/net/dwc_eth_qos.c
index 8a65017f668..26cf75b192a 100644
--- a/drivers/net/dwc_eth_qos.c
+++ b/drivers/net/dwc_eth_qos.c
@@ -770,6 +770,16 @@ static int eqos_start(struct udevice *dev)
 	 */
 	setbits_le32(&eqos->dma_regs->mode, EQOS_DMA_MODE_SWR);
 
+	/*
+	 * The i.MX93 requires speed configuration bits to be set to complete
+	 * the reset procedure. This only affects RMII mode, though it is not
+	 * possible to check for the mode at this stage.
+	 * See b536f32b5b034f592df0f0ba129ad59fa0f3e532 in linux (> 6.4)
+	 */
+	udelay(200);
+	setbits_le32(&eqos->mac_regs->configuration,
+		EQOS_MAC_CONFIGURATION_PS | EQOS_MAC_CONFIGURATION_FES);
+
 	ret = wait_for_bit_le32(&eqos->dma_regs->mode,
 				EQOS_DMA_MODE_SWR, false,
 				eqos->config->swr_wait, false);
-- 
2.46.0

