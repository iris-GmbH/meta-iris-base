From 45e311b5312b86f1b7680b472dd14b3dd1435f93 Mon Sep 17 00:00:00 2001
From: Michael Glembotzki <Michael.Glembotzki@iris-sensing.com>
Date: Mon, 13 May 2024 11:16:22 +0000
Subject: [PATCH] Add AHAB Support for kernel fitImages

Upstream-Status: Inappropriate [use-case specific changes]
Signed-off-by: Michael Glembotzki <Michael.Glembotzki@iris-sensing.com>
---
 arch/arm/include/asm/mach-imx/ahab.h |  1 +
 boot/Kconfig                         |  2 +-
 boot/bootm.c                         | 62 ++++++++++++++++++++++++++++
 cmd/bootm.c                          | 15 +++++++
 4 files changed, 79 insertions(+), 1 deletion(-)

diff --git a/arch/arm/include/asm/mach-imx/ahab.h b/arch/arm/include/asm/mach-imx/ahab.h
index dad170cee47..cccc61c0931 100644
--- a/arch/arm/include/asm/mach-imx/ahab.h
+++ b/arch/arm/include/asm/mach-imx/ahab.h
@@ -11,5 +11,6 @@
 void *ahab_auth_cntr_hdr(struct container_hdr *container, u16 length);
 int ahab_auth_release(void);
 int ahab_verify_cntr_image(struct boot_img_t *img, int image_index);
+int authenticate_os_container(ulong addr);
 
 #endif
diff --git a/boot/Kconfig b/boot/Kconfig
index 3d7aabd27d6..91a928a99c8 100644
--- a/boot/Kconfig
+++ b/boot/Kconfig
@@ -381,7 +381,7 @@ config BOOT_DEFAULTS_CMDS
 	select CMD_DHCP if CMD_NET
 	select CMD_PING if CMD_NET
 	select CMD_PXE if CMD_NET
-	select CMD_BOOTI if ARM64
+	select CMD_BOOTI if ARM64 && !AHAB_BOOT
 	select CMD_BOOTZ if ARM && !ARM64
 	imply CMD_MII if NET
 
diff --git a/boot/bootm.c b/boot/bootm.c
index d071537d692..f1097510302 100644
--- a/boot/bootm.c
+++ b/boot/bootm.c
@@ -35,6 +35,55 @@
 #include <bootm.h>
 #include <image.h>
 
+#if CONFIG_IS_ENABLED(AHAB_BOOT)
+
+#define IV_MAX_LEN			32
+#define HASH_MAX_LEN			64
+#define MAX_NUM_IMGS			6
+
+#define IVT_HEADER_TAG_B0		0x87
+#define IVT_VERSION_B0			0x00
+#define CONTAINER_IMAGE_ARRAY_START_OFFSET	0x2000
+
+typedef struct {
+	uint8_t version;
+	uint16_t length;
+	uint8_t tag;
+	uint16_t srk_table_offset;
+	uint16_t cert_offset;
+	uint16_t blob_offset;
+	uint16_t signature_offset;
+	uint32_t reserved;
+} __packed sig_blk_hdr_t;
+
+typedef struct {
+	uint32_t offset;
+	uint32_t size;
+	uint64_t dst;
+	uint64_t entry;
+	uint32_t hab_flags;
+	uint32_t meta;
+	uint8_t hash[HASH_MAX_LEN];
+	uint8_t iv[IV_MAX_LEN];
+} __packed boot_img_t;
+
+typedef struct {
+	uint8_t version;
+	uint16_t length;
+	uint8_t tag;
+	uint32_t flags;
+	uint16_t sw_version;
+	uint8_t fuse_version;
+	uint8_t num_images;
+	uint16_t sig_blk_offset;
+	uint16_t reserved;
+	boot_img_t img[MAX_NUM_IMGS];
+	sig_blk_hdr_t sig_blk_hdr;
+	uint32_t sigblk_size;
+	uint32_t padding;
+} __packed flash_header_v3_t;
+#endif
+
 #define MAX_CMDLINE_SIZE	SZ_4K
 
 #define IH_INITRD_ARCH IH_ARCH_DEFAULT
@@ -135,6 +184,11 @@ static int boot_get_kernel(const char *addr_fit, struct bootm_headers *images,
 	const void *boot_img;
 	const void *vendor_boot_img;
 #endif
+
+#if CONFIG_IS_ENABLED(AHAB_BOOT)
+	flash_header_v3_t *fhdr_v3;
+#endif
+
 	img_addr = genimg_get_kernel_addr_fit(addr_fit, &fit_uname_config,
 					      &fit_uname_kernel);
 
@@ -145,6 +199,14 @@ static int boot_get_kernel(const char *addr_fit, struct bootm_headers *images,
 
 	/* check image type, for FIT images get FIT kernel node */
 	*os_data = *os_len = 0;
+
+#if CONFIG_IS_ENABLED(AHAB_BOOT)
+	fhdr_v3 = (flash_header_v3_t *) map_sysmem(img_addr, 0);
+	if (fhdr_v3->version == IVT_VERSION_B0 && fhdr_v3->tag == IVT_HEADER_TAG_B0) {
+		printf("## Valid NXP Container Header found\n");
+		img_addr += CONTAINER_IMAGE_ARRAY_START_OFFSET;
+	}
+#endif
 	buf = map_sysmem(img_addr, 0);
 	switch (genimg_get_format(buf)) {
 #if CONFIG_IS_ENABLED(LEGACY_IMAGE_FORMAT)
diff --git a/cmd/bootm.c b/cmd/bootm.c
index e89df6bcc73..36e2feba51d 100644
--- a/cmd/bootm.c
+++ b/cmd/bootm.c
@@ -231,6 +231,21 @@ int do_bootm(struct cmd_tbl *cmdtp, int flag, int argc, char *const argv[])
 #endif
 #endif
 
+#ifdef CONFIG_AHAB_BOOT
+	extern int authenticate_os_container(ulong addr);
+	ulong img_addr;
+	if(argc > 0) {
+		img_addr = simple_strtoul(argv[0], NULL, 16);
+	} else {
+		img_addr = image_load_addr;
+	}
+
+	if (authenticate_os_container(img_addr)) {
+		printf("ERROR: Authenticate FIT image Fail, Please check\n");
+		return 1;
+	}
+#endif
+
 	bootm_init(&bmi);
 	if (argc)
 		bmi.addr_img = argv[0];
-- 
2.46.1

