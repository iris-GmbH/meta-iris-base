From de91d1017b224920e5da5d964d7ad46ca9af7c8c Mon Sep 17 00:00:00 2001
From: Michael Glembotzki <Michael.Glembotzki@iris-sensing.com>
Date: Wed, 15 Feb 2023 11:28:19 +0100
Subject: [PATCH] eqos: Make generic EQOS driver usable for RMII

Signed-off-by: Jan.Hannig <jan.hannig@irisgmbh.de>
Signed-off-by: Jasper Orschulko <jasper@fancydomain.eu>
---
 drivers/net/dwc_eth_qos_imx.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/net/dwc_eth_qos_imx.c b/drivers/net/dwc_eth_qos_imx.c
index 0a47c96b5e7..c4458d7b2cb 100644
--- a/drivers/net/dwc_eth_qos_imx.c
+++ b/drivers/net/dwc_eth_qos_imx.c
@@ -191,11 +191,23 @@ static int eqos_set_tx_clk_speed_imx(struct udevice *dev)
 		return -EINVAL;
 	}
 
+#ifdef CFG_RMII
+/* The RMII interface isn't implemented correctly in this generic driver, only
+ * RGMII is served here (see code in #else path). The clock rate functions in
+ * the #else path are called to adapt the interface clock according to the
+ * speed rate of ethernet PHY. As the interface clock frequency for the RMII
+ * interface is constantly 50 MHz and never changing, the clock set functions
+ * are not allowed to be used here, otherwise the PHY (ADIN1200) quits
+ * functioning. Actually, CFG_RMII is defined in the board specific header
+ * imx8mp_irma6r2.h
+ */
+#else
 #if CONFIG_IS_ENABLED(CLK) && IS_ENABLED(CONFIG_IMX8)
 	if (!is_imx8dxl())
 		ret = clk_set_rate(&eqos->clk_tx, rate);
 #else
 	ret = imx_eqos_txclk_set_rate(rate);
+#endif
 #endif
 	if (ret < 0) {
 		pr_err("imx (tx_clk, %lu) failed: %d", rate, ret);
-- 
2.46.0

