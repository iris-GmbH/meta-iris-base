From fd0cc510831731af2313d47922dc4d776b70a9d5 Mon Sep 17 00:00:00 2001
From: Erik Schumacher <erik.schumacher@iris-sensing.com>
Date: Thu, 26 Jan 2023 15:04:08 +0100
Subject: [PATCH 16/24] rtc-pcf8563: Skip registering of clkout for RTC

Calling clk_disable_unused() later might hang in rtc pcf8563
is_prepared() function. We don't use the clkout so we don't need to
register the clock. So it is more or less a hot fix.

If the clkout register is skipped, disable clkout by writing to the
i2c register.

Signed-off-by: Erik Schumacher <erik.schumacher@iris-sensing.com>
Signed-off-by: Jasper Orschulko <jasper@fancydomain.eu>
---
 .../boot/dts/freescale/imx8mp-irma6r2.dts     |  1 +
 drivers/rtc/rtc-pcf8563.c                     | 21 ++++++++++++++++++-
 2 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/arch/arm64/boot/dts/freescale/imx8mp-irma6r2.dts b/arch/arm64/boot/dts/freescale/imx8mp-irma6r2.dts
index 8b4918bfddbf..fd4577587358 100644
--- a/arch/arm64/boot/dts/freescale/imx8mp-irma6r2.dts
+++ b/arch/arm64/boot/dts/freescale/imx8mp-irma6r2.dts
@@ -375,6 +375,7 @@ rtc: rtc@51 {
 		compatible = "nxp,pcf8563";
 		reg = <0x51>;
 		#clock-cells = <0>;
+		skip-register-clkout;
 	};
 };
 
diff --git a/drivers/rtc/rtc-pcf8563.c b/drivers/rtc/rtc-pcf8563.c
index ea82b89d8929..216cd5ea67c8 100644
--- a/drivers/rtc/rtc-pcf8563.c
+++ b/drivers/rtc/rtc-pcf8563.c
@@ -514,6 +514,7 @@ static int pcf8563_probe(struct i2c_client *client)
 	struct pcf8563 *pcf8563;
 	int err;
 	unsigned char buf;
+	bool clkout_used = false;
 
 	dev_dbg(&client->dev, "%s\n", __func__);
 
@@ -582,9 +583,27 @@ static int pcf8563_probe(struct i2c_client *client)
 
 #ifdef CONFIG_COMMON_CLK
 	/* register clk in common clk framework */
-	pcf8563_clkout_register_clk(pcf8563);
+	if (!of_property_read_bool(
+			client->dev.of_node, "skip-register-clkout")) {
+		pcf8563_clkout_register_clk(pcf8563);
+		clkout_used = true;
+	}
 #endif
 
+	if (!clkout_used) {
+		/*
+		 * Disable clkout as we are not using it
+		 * Set bit 7 in PCF8563_REG_CLKO to 0
+		 */
+		buf = 0x00;
+		err = pcf8563_write_block_data(client, PCF8563_REG_CLKO, 1,
+				&buf);
+		if (err < 0) {
+			dev_err(&client->dev, "%s: write error\n", __func__);
+			return err;
+		}
+	}
+
 	return 0;
 }
 
-- 
2.44.1

