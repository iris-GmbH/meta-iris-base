From a65ba0b3e831e500c846ac053ab2ad499cd3cd1d Mon Sep 17 00:00:00 2001
From: Stefano Babic <stefano.babic@swupdate.org>
Date: Tue, 8 Apr 2025 15:19:51 +0200
Subject: [PATCH 07/11] Factorize function to parse linux command line

This can be reused inside the project and made available to Lua.

Signed-off-by: Stefano Babic <stefano.babic@swupdate.org>

Upstream-Status: Backport [https://github.com/sbabic/swupdate/commit/a38e75c086cb2f93ab09db51a2e9b597ceda4426]
---
 core/util.c    | 23 +++++++++++++++++------
 include/util.h |  1 +
 2 files changed, 18 insertions(+), 6 deletions(-)

diff --git a/core/util.c b/core/util.c
index c3fca34c..c106a94e 100644
--- a/core/util.c
+++ b/core/util.c
@@ -1164,11 +1164,10 @@ static char *get_root_from_mountinfo(void)
 }
 
 #define MAX_CMDLINE_LENGTH 4096
-static char *get_root_from_cmdline(void)
+char **parse_linux_cmdline(void)
 {
 	char *buf;
 	FILE *fp;
-	char *root = NULL;
 	int ret;
 	char **parms = NULL;
 
@@ -1192,10 +1191,25 @@ static char *get_root_from_cmdline(void)
 	 */
 	buf[MAX_CMDLINE_LENGTH - 1] = '\0';
 
+	fclose(fp);
+
 	if (ret > 0) {
 		parms = string_split(buf, ' ');
 		if (!parms)
 			goto out;
+	}
+out:
+	free(buf);
+	return parms;
+}
+
+static char *get_root_from_cmdline(void)
+{
+	char **parms = NULL;
+	char *root = NULL;
+
+	parms = parse_linux_cmdline();
+	if (parms) {
 		int nparms = count_string_array((const char **)parms);
 		for (unsigned int index = 0; index < nparms; index++) {
 			if (!strncmp(parms[index], "root=", strlen("root="))) {
@@ -1207,11 +1221,8 @@ static char *get_root_from_cmdline(void)
 				break;
 			}
 		}
+		free_string_array(parms);
 	}
-out:
-	fclose(fp);
-	free_string_array(parms);
-	free(buf);
 	return root;
 }
 
diff --git a/include/util.h b/include/util.h
index 07c20770..f49fe8cc 100644
--- a/include/util.h
+++ b/include/util.h
@@ -300,6 +300,7 @@ void get_install_swset(char *buf, size_t len);
 void get_install_running_mode(char *buf, size_t len);
 bool is_dryrun_install(void);
 char *get_root_device(void);
+char **parse_linux_cmdline(void);
 
 /* Setting global information */
 void set_version_range(const char *minversion,
-- 
2.44.3

