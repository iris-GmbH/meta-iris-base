#! /bin/sh

# System V init script for chrony
# Adapted from the script already in meta-networking for ntpd

### BEGIN INIT INFO
# Provides:        chrony
# Required-Start:  $network $remote_fs $syslog
# Required-Stop:   $network $remote_fs $syslog
# Default-Start:   2 3 4 5
# Default-Stop:
# Short-Description: Start chrony time daemon
### END INIT INFO

PATH=/sbin:/bin:/usr/bin:/usr/sbin
CFG_FILE=/mnt/iris/chrony/chrony.conf
DEFAULT_CFG=/etc/chrony.conf
DAEMON=/usr/sbin/chronyd
PIDFILE=/run/chrony/chronyd.pid

reset_cfg() {
	echo 'include /etc/chrony.conf' > $CFG_FILE
	echo '# server 0.0.0.0 iburst' >> $CFG_FILE
}

# create default config if custom one does not exist
if [ ! -f $CFG_FILE ]; then
	mkdir -p /mnt/iris/chrony
	reset_cfg
fi

# reset config, if custom one does not have include yet
if ! [[ $(head -n 1 $CFG_FILE) == "include"* ]]; then
	old_server=$(grep 'server' /mnt/iris/chrony/chrony.conf | grep 'iburst')
	echo 'include /etc/chrony.conf' > $CFG_FILE
	echo $old_server >> $CFG_FILE
fi

test -x $DAEMON -a -r ${CFG_FILE} || exit 0

# Source function library.
. /etc/init.d/functions

# Functions to do individual actions
startdaemon(){
	echo -n "Starting chronyd: "
	start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE --startas $DAEMON -- "$@" -f ${CFG_FILE}
	echo "done"
}
stopdaemon(){
	echo -n "Stopping chronyd: "
	start-stop-daemon --stop --quiet --oknodo -p $PIDFILE
	echo "done"
}

case "$1" in
  start)
	startdaemon
	;;
  stop)
  	stopdaemon
	;;
  force-reload | restart | reload)
  	stopdaemon
	startdaemon
	;;
  status)
	status /usr/sbin/chronyd;
	exit $?
	;;
  *)
	echo "Usage: chronyd { start | stop | status | restart | reload }" >&2
	exit 1
	;;
esac

exit 0
