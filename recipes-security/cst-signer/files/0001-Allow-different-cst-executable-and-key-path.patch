From f2c78cde6665a90527209933d69a4d7881a3b040 Mon Sep 17 00:00:00 2001
From: Michael Glembotzki <Michael.Glembotzki@iris-sensing.com>
Date: Thu, 23 May 2024 14:43:19 +0200
Subject: [PATCH] Allow different cst executable and key path

Use CST_PATH for the key location provided by the cst tool.
Use CST_EXE_PATH for the executable location for the cst tool.

Signed-off-by: Michael Glembotzki <Michael.Glembotzki@iris-sensing.com>
---
 inc/cst_signer.h |  1 +
 src/cst_signer.c | 14 ++++++++++----
 2 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/inc/cst_signer.h b/inc/cst_signer.h
index 0d6eadc..d6fd0c2 100644
--- a/inc/cst_signer.h
+++ b/inc/cst_signer.h
@@ -186,6 +186,7 @@ static bool g_debug = 0;
 static char *g_csf_cfgfilename = NULL;
 extern uint32_t g_image_offset;
 static char *g_cst_path = NULL;
+static char *g_cst_exe_path = NULL;
 
 unsigned char g_ivt_v1_mask[] = {0xFF,0xFF,0xFF,0xF0};
 unsigned char g_ivt_v1[] = {0xD1,0x00,0x20,0x41};
diff --git a/src/cst_signer.c b/src/cst_signer.c
index 549bcd8..fae082b 100644
--- a/src/cst_signer.c
+++ b/src/cst_signer.c
@@ -125,12 +125,12 @@ int sign_csf(char *ifname, char *ofname)
         return -E_FAILURE;
     }
 #if defined(__linux__)
-    if (0 > (snprintf(sys_cmd, SYS_CMD_LEN, "%s/linux64/bin/cst ", g_cst_path))) {
+    if (0 > (snprintf(sys_cmd, SYS_CMD_LEN, "%s ", g_cst_exe_path))) {
         fprintf(stderr, "ERROR: System command build unsuccessful. Exiting.\n");
         return -E_FAILURE;
     }
 #elif defined(_WIN32) || defined(_WIN64)
-    if (0 > (snprintf(sys_cmd, SYS_CMD_LEN, "%s/mingw32/bin/cst.exe ", g_cst_path))) {
+    if (0 > (snprintf(sys_cmd, SYS_CMD_LEN, "%s ", g_cst_exe_path))) {
         fprintf(stderr, "ERROR: System command build unsuccessful. Exiting.\n");
         return -E_FAILURE;
     }
@@ -1092,12 +1092,12 @@ static int generate_csf_v1(int idx, char *csf_file)
     }
 
 #if defined(__linux__)
-    if (0 > (snprintf(sys_cmd, SYS_CMD_LEN, "%s/linux64/bin/cst ", g_cst_path))) {
+    if (0 > (snprintf(sys_cmd, SYS_CMD_LEN, "%s ", g_cst_exe_path))) {
         fprintf(stderr, "ERROR: System command build unsuccessful. Exiting.\n");
         goto err;
     }
 #elif defined(_WIN32) || defined(_WIN64)
-    if (0 > (snprintf(sys_cmd, SYS_CMD_LEN, "%s/mingw32/bin/cst.exe ", g_cst_path))) {
+    if (0 > (snprintf(sys_cmd, SYS_CMD_LEN, "%s ", g_cst_exe_path))) {
         fprintf(stderr, "ERROR: System command build unsuccessful. Exiting.\n");
         return -E_FAILURE;
     }
@@ -1574,6 +1574,12 @@ int main(int argc, char **argv)
         goto err;
     }
 
+    g_cst_exe_path = getenv("CST_EXE_PATH");
+    if(!g_cst_exe_path){
+        fprintf(stderr, "ERROR: Environment variable \"CST_EXE_PATH\" is mandatory\n");
+        goto err;
+    }
+
     /* Handle command line options */
     handle_cl_opt(argc, argv);
 
-- 
2.44.0

