From 9821179493eb7fd89012741c0e8087ca2d30fd0f Mon Sep 17 00:00:00 2001
From: Jasper Orschulko <jasper@fancydomain.eu>
Date: Tue, 23 Feb 2021 15:24:54 +0100
Subject: [PATCH 09/20] add the iris boards

- Add sc572/sc573-gen6 board to include/config
- Add sc572/sc573-gen6 defconfig
- Add sc572/sc573-gen6 targets in KConfig and mach-types
- Add sc572/sc573-gen6 as boards from iris

Signed-off-by: Jasper Orschulko <jasper@fancydomain.eu>
---
 arch/arm/cpu/armv7/sc57x/Kconfig   |   8 ++
 arch/arm/include/asm/mach-types.h  |   2 +
 board/iris/sc572-gen6/Kconfig      |  12 ++
 board/iris/sc572-gen6/MAINTAINERS  |   6 +
 board/iris/sc572-gen6/Makefile     |  14 +++
 board/iris/sc572-gen6/sc572-gen6.c | 163 +++++++++++++++++++++++++++
 board/iris/sc573-gen6/Kconfig      |  12 ++
 board/iris/sc573-gen6/MAINTAINERS  |   6 +
 board/iris/sc573-gen6/Makefile     |  14 +++
 board/iris/sc573-gen6/sc573-gen6.c | 163 +++++++++++++++++++++++++++
 configs/sc572-gen6_defconfig       |   3 +
 configs/sc573-gen6_defconfig       |   3 +
 include/configs/sc572-gen6.h       | 171 +++++++++++++++++++++++++++++
 include/configs/sc573-gen6.h       | 171 +++++++++++++++++++++++++++++
 14 files changed, 748 insertions(+)
 create mode 100644 board/iris/sc572-gen6/Kconfig
 create mode 100644 board/iris/sc572-gen6/MAINTAINERS
 create mode 100644 board/iris/sc572-gen6/Makefile
 create mode 100644 board/iris/sc572-gen6/sc572-gen6.c
 create mode 100644 board/iris/sc573-gen6/Kconfig
 create mode 100644 board/iris/sc573-gen6/MAINTAINERS
 create mode 100644 board/iris/sc573-gen6/Makefile
 create mode 100644 board/iris/sc573-gen6/sc573-gen6.c
 create mode 100644 configs/sc572-gen6_defconfig
 create mode 100644 configs/sc573-gen6_defconfig
 create mode 100644 include/configs/sc572-gen6.h
 create mode 100644 include/configs/sc573-gen6.h

diff --git a/arch/arm/cpu/armv7/sc57x/Kconfig b/arch/arm/cpu/armv7/sc57x/Kconfig
index a60c68fa62..fb8f0ce2c2 100644
--- a/arch/arm/cpu/armv7/sc57x/Kconfig
+++ b/arch/arm/cpu/armv7/sc57x/Kconfig
@@ -6,6 +6,12 @@ choice
 config TARGET_SC573_EZKIT
 	bool "Support sc573 EZkit"
 
+config TARGET_SC572_GEN6
+	bool "Support sc572 Gen6 board by iris-GmbH"
+
+config TARGET_SC573_GEN6
+	bool "Support sc573 Gen6 board by iris-GmbH"
+	
 endchoice
 
 config SC_BOOT_MODE
@@ -58,5 +64,7 @@ config SPI_UBOOT_OFF
 	  Specifiy the offset of the second stage u-boot bootstream on SPI flash
 
 source "board/adi/sc573-ezkit/Kconfig"
+source "board/iris/sc572-gen6/Kconfig"
+source "board/iris/sc573-gen6/Kconfig"
 
 endif
diff --git a/arch/arm/include/asm/mach-types.h b/arch/arm/include/asm/mach-types.h
index be8eae5eec..0de302bbde 100644
--- a/arch/arm/include/asm/mach-types.h
+++ b/arch/arm/include/asm/mach-types.h
@@ -1113,6 +1113,8 @@ extern unsigned int __machine_arch_type;
 #define MACH_TYPE_SC589_EDGE           4578
 #define MACH_TYPE_SC573_EZKIT          4579
 #define MACH_TYPE_SC589_MINI           4580
+#define MACH_TYPE_SC572_GEN6	       4581
+#define MACH_TYPE_SC573_GEN6	       4582
 
 #ifdef CONFIG_ARCH_EBSA110
 # ifdef machine_arch_type
diff --git a/board/iris/sc572-gen6/Kconfig b/board/iris/sc572-gen6/Kconfig
new file mode 100644
index 0000000000..b9c8d578d1
--- /dev/null
+++ b/board/iris/sc572-gen6/Kconfig
@@ -0,0 +1,12 @@
+if TARGET_SC572_GEN6
+
+config SYS_VENDOR
+	default "iris"
+
+config SYS_BOARD
+	default "sc572-gen6"
+
+config SYS_CONFIG_NAME
+	default "sc572-gen6"
+
+endif
diff --git a/board/iris/sc572-gen6/MAINTAINERS b/board/iris/sc572-gen6/MAINTAINERS
new file mode 100644
index 0000000000..d81731a6a4
--- /dev/null
+++ b/board/iris/sc572-gen6/MAINTAINERS
@@ -0,0 +1,6 @@
+SC572 GEN6 BOARD
+M:  Michael Glembotzki <Michael.Glembotzki@irisgmbh.de>
+S:	Maintained
+F:	board/iris/sc572-gen6/
+F:	include/configs/sc572-gen6.h
+F:	configs/sc572-gen6_defconfig
diff --git a/board/iris/sc572-gen6/Makefile b/board/iris/sc572-gen6/Makefile
new file mode 100644
index 0000000000..9b7e03f91c
--- /dev/null
+++ b/board/iris/sc572-gen6/Makefile
@@ -0,0 +1,14 @@
+#
+# U-boot - Makefile
+#
+# Copyright (c) 2021 iris-GmbH
+#
+# Copyright (c) 2013 Analog Device Inc.
+#
+# (C) Copyright 2000-2012
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# SPDX-License-Identifier:      GPL-2.0+
+#
+
+obj-y	:= $(BOARD).o
diff --git a/board/iris/sc572-gen6/sc572-gen6.c b/board/iris/sc572-gen6/sc572-gen6.c
new file mode 100644
index 0000000000..b70d3e1688
--- /dev/null
+++ b/board/iris/sc572-gen6/sc572-gen6.c
@@ -0,0 +1,163 @@
+/*
+ * U-boot - main board file
+ *
+ * Copyright (c) 2021 iris-GmbH
+ *
+ * Copyright (c) 2013-2014 Analog Devices Inc.
+ *
+ * Licensed under the GPL-2 or later.
+ */
+
+#include <common.h>
+#include <netdev.h>
+#include <phy.h>
+#include <asm/io.h>
+#include <asm/mach-types.h>
+#include <asm/arch/portmux.h>
+#include <asm/arch/sc57x.h>
+#include <asm/arch-sc57x/dwmmc.h>
+#include <watchdog.h>
+
+#include "../common/power_good.h"
+#include "../common/mac.h"
+#include "../common/bootmanager.h"
+
+#ifdef CONFIG_EPC660
+# include "../common/epc660init.c"
+#endif
+
+DECLARE_GLOBAL_DATA_PTR;
+int board_early_init_f(void)
+{
+#ifdef CONFIG_HW_WATCHDOG
+	hw_watchdog_init();
+#endif
+
+	return 0;
+}
+
+void set_spu_securep_msec(int n, bool msec)
+{
+	void __iomem *p = (void __iomem *)(REG_SPU0_CTL + 0xA00 + 4 * n);
+	u32 securep = readl(p);
+
+	if (msec)
+		writel(securep | 0x2, p);
+	else
+		writel(securep & ~0x2, p);
+}
+
+/* miscellaneous platform dependent initialisations */
+int misc_init_r(void)
+{
+	printf("other init for Gen6 board\n");
+	set_spu_securep_msec(41, 1);
+	set_spu_securep_msec(45, 1);
+	set_spu_securep_msec(140, 1);
+
+	wait_for_power_good();
+#ifdef CONFIG_EPC660
+	epc660_ireset();
+#endif
+	mac_read_from_eeprom_into_env();
+	setup_bootmanager();
+	return 0;
+}
+
+unsigned long flash_init(void)
+{
+
+#if 0
+	/*  Enable bank 1 of smc because AMS1 is connected to enable of SRAM */
+	*pREG_SMC0_GCTL = 0x10;
+	*pREG_SMC0_B1CTL = 0x00000001;
+	*pREG_SMC0_B1TIM = 0x05220522;
+#endif
+	return 0;
+}
+
+int dram_init()
+{
+	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
+	return 0;
+}
+
+void s_init(void)
+{
+}
+
+#ifdef CONFIG_DESIGNWARE_ETH
+int board_eth_init(bd_t *bis)
+{
+	int ret;
+
+	// Reserve the  ports for RMII mode
+	static const unsigned short pins[] = P_RMII0;
+	ret = peripheral_request_list(pins, "emac0");
+
+	if (ret) {
+	      printf("Failed to request RMII pins: %d\n", ret);
+	      goto fail;
+	}
+
+	// set RMII mode
+	u64 pcfg0 = readl(REG_PADS0_PCFG0);
+	pcfg0 &= 0xfffdffe0;	// reset all emac settings
+	pcfg0 |= PADS_PCFG_EMACRMII;
+	pcfg0 |= PADS_PCFG_EMACNORESET;
+	writel(pcfg0, REG_PADS0_PCFG0);
+
+	// Init the EMAC
+	ret = designware_initialize(REG_EMAC0_MACCFG, PHY_INTERFACE_MODE_RMII);
+
+	if (ret < 0) {
+	      printf("Failed to initialize the EMAC: %d\n", ret);
+	      goto fail;
+	}
+
+	return 0;
+fail:
+	return ret;
+}
+
+int board_phy_config(struct phy_device *phydev)
+{
+#ifdef CONFIG_PHY_CHECK_RESET
+	// De-assert the external reset to enable the PHY
+	void __iomem *rcu_ctl = (void __iomem *)(RCU0_CTL);
+	writel(0x04, rcu_ctl);
+#endif
+
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+	return 0;
+}
+#endif
+
+#ifdef CONFIG_GENERIC_MMC
+int board_mmc_init(bd_t *bis)
+{
+	int ret;
+#ifdef CONFIG_DWMMC
+	ret = sc5xx_dwmmc_init(bis);
+	if (ret)
+		printf("dwmmc init failed\n");
+#endif
+	return ret;
+}
+#endif
+
+int board_init(void)
+{
+	gd->bd->bi_arch_number = MACH_TYPE_SC572_GEN6;
+	/* boot param addr */
+	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + (0x100);
+
+#ifdef CONFIG_PHY_MICREL
+	// Init MICREL driver
+	phy_micrel_init();
+#endif
+
+	return 0;
+}
diff --git a/board/iris/sc573-gen6/Kconfig b/board/iris/sc573-gen6/Kconfig
new file mode 100644
index 0000000000..883887d3af
--- /dev/null
+++ b/board/iris/sc573-gen6/Kconfig
@@ -0,0 +1,12 @@
+if TARGET_SC573_GEN6
+
+config SYS_VENDOR
+	default "iris"
+
+config SYS_BOARD
+	default "sc573-gen6"
+
+config SYS_CONFIG_NAME
+	default "sc573-gen6"
+
+endif
diff --git a/board/iris/sc573-gen6/MAINTAINERS b/board/iris/sc573-gen6/MAINTAINERS
new file mode 100644
index 0000000000..1289f63a72
--- /dev/null
+++ b/board/iris/sc573-gen6/MAINTAINERS
@@ -0,0 +1,6 @@
+SC573 GEN6 BOARD
+M:	Michael Glembotzki <Michael.Glembotzki@irisgmbh.de>
+S:	Maintained
+F:	board/iris/sc573-gen6/
+F:	include/configs/sc573-gen6.h
+F:	configs/sc573-gen6_defconfig
diff --git a/board/iris/sc573-gen6/Makefile b/board/iris/sc573-gen6/Makefile
new file mode 100644
index 0000000000..9b7e03f91c
--- /dev/null
+++ b/board/iris/sc573-gen6/Makefile
@@ -0,0 +1,14 @@
+#
+# U-boot - Makefile
+#
+# Copyright (c) 2021 iris-GmbH
+#
+# Copyright (c) 2013 Analog Device Inc.
+#
+# (C) Copyright 2000-2012
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# SPDX-License-Identifier:      GPL-2.0+
+#
+
+obj-y	:= $(BOARD).o
diff --git a/board/iris/sc573-gen6/sc573-gen6.c b/board/iris/sc573-gen6/sc573-gen6.c
new file mode 100644
index 0000000000..375529844a
--- /dev/null
+++ b/board/iris/sc573-gen6/sc573-gen6.c
@@ -0,0 +1,163 @@
+/*
+ * U-boot - main board file
+ *
+ * Copyright (c) 2021 iris-GmbH
+ *
+ * Copyright (c) 2013-2014 Analog Devices Inc.
+ *
+ * Licensed under the GPL-2 or later.
+ */
+
+#include <common.h>
+#include <netdev.h>
+#include <phy.h>
+#include <asm/io.h>
+#include <asm/mach-types.h>
+#include <asm/arch/portmux.h>
+#include <asm/arch/sc57x.h>
+#include <asm/arch-sc57x/dwmmc.h>
+#include <watchdog.h>
+
+#include "../common/power_good.h"
+#include "../common/mac.h"
+#include "../common/bootmanager.h"
+
+#ifdef CONFIG_EPC660
+# include "../common/epc660init.c"
+#endif
+
+DECLARE_GLOBAL_DATA_PTR;
+int board_early_init_f(void)
+{
+#ifdef CONFIG_HW_WATCHDOG
+	hw_watchdog_init();
+#endif
+
+	return 0;
+}
+
+void set_spu_securep_msec(int n, bool msec)
+{
+	void __iomem *p = (void __iomem *)(REG_SPU0_CTL + 0xA00 + 4 * n);
+	u32 securep = readl(p);
+
+	if (msec)
+		writel(securep | 0x2, p);
+	else
+		writel(securep & ~0x2, p);
+}
+
+/* miscellaneous platform dependent initialisations */
+int misc_init_r(void)
+{
+	printf("other init for Gen6 board\n");
+	set_spu_securep_msec(41, 1);
+	set_spu_securep_msec(45, 1);
+	set_spu_securep_msec(140, 1);
+
+	wait_for_power_good();
+#ifdef CONFIG_EPC660
+	epc660_ireset();
+#endif
+	mac_read_from_eeprom_into_env();
+	setup_bootmanager();
+	return 0;
+}
+
+unsigned long flash_init(void)
+{
+
+#if 0
+	/*  Enable bank 1 of smc because AMS1 is connected to enable of SRAM */
+	*pREG_SMC0_GCTL = 0x10;
+	*pREG_SMC0_B1CTL = 0x00000001;
+	*pREG_SMC0_B1TIM = 0x05220522;
+#endif
+	return 0;
+}
+
+int dram_init()
+{
+	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
+	return 0;
+}
+
+void s_init(void)
+{
+}
+
+#ifdef CONFIG_DESIGNWARE_ETH
+int board_eth_init(bd_t *bis)
+{
+	int ret;
+
+	// Reserve the  ports for RMII mode
+	static const unsigned short pins[] = P_RMII0;
+	ret = peripheral_request_list(pins, "emac0");
+
+	if (ret) {
+	      printf("Failed to request RMII pins: %d\n", ret);
+	      goto fail;
+	}
+
+	// set RMII mode
+	u64 pcfg0 = readl(REG_PADS0_PCFG0);
+	pcfg0 &= 0xfffdffe0;	// reset all emac settings
+	pcfg0 |= PADS_PCFG_EMACRMII;
+	pcfg0 |= PADS_PCFG_EMACNORESET;
+	writel(pcfg0, REG_PADS0_PCFG0);
+
+	// Init the EMAC
+	ret = designware_initialize(REG_EMAC0_MACCFG, PHY_INTERFACE_MODE_RMII);
+
+	if (ret < 0) {
+	      printf("Failed to initialize the EMAC: %d\n", ret);
+	      goto fail;
+	}
+
+	return 0;
+fail:
+	return ret;
+}
+
+int board_phy_config(struct phy_device *phydev)
+{
+#ifdef CONFIG_PHY_CHECK_RESET
+	// De-assert the external reset to enable the PHY
+	void __iomem *rcu_ctl = (void __iomem *)(RCU0_CTL);
+	writel(0x04, rcu_ctl);
+#endif
+
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+	return 0;
+}
+#endif
+
+#ifdef CONFIG_GENERIC_MMC
+int board_mmc_init(bd_t *bis)
+{
+	int ret;
+#ifdef CONFIG_DWMMC
+	ret = sc5xx_dwmmc_init(bis);
+	if (ret)
+		printf("dwmmc init failed\n");
+#endif
+	return ret;
+}
+#endif
+
+int board_init(void)
+{
+	gd->bd->bi_arch_number = MACH_TYPE_SC573_GEN6;
+	/* boot param addr */
+	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + (0x100);
+
+#ifdef CONFIG_PHY_MICREL
+	// Init MICREL driver
+	phy_micrel_init();
+#endif
+
+	return 0;
+}
diff --git a/configs/sc572-gen6_defconfig b/configs/sc572-gen6_defconfig
new file mode 100644
index 0000000000..dfdbfe7487
--- /dev/null
+++ b/configs/sc572-gen6_defconfig
@@ -0,0 +1,3 @@
+CONFIG_ARM=y
+CONFIG_SC57X=y
+CONFIG_TARGET_SC572_GEN6=y
diff --git a/configs/sc573-gen6_defconfig b/configs/sc573-gen6_defconfig
new file mode 100644
index 0000000000..9261d3ae76
--- /dev/null
+++ b/configs/sc573-gen6_defconfig
@@ -0,0 +1,3 @@
+CONFIG_ARM=y
+CONFIG_SC57X=y
+CONFIG_TARGET_SC573_GEN6=y
diff --git a/include/configs/sc572-gen6.h b/include/configs/sc572-gen6.h
new file mode 100644
index 0000000000..77bb2161c3
--- /dev/null
+++ b/include/configs/sc572-gen6.h
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2021 iris-GmbH
+ *
+ * U-boot - Configuration file for sc572 gen6 board by iris-GmbH
+ */
+
+#ifndef __CONFIG_SC572_GEN6_H
+#define __CONFIG_SC572_GEN6_H
+
+#include <asm/arch/config.h>
+
+/*
+ * Processor Settings
+ */
+#define CONFIG_CPU		  "ADSP-SC572"
+#ifdef CONFIG_SC57X_CHAIN_BOOT
+# define CONFIG_LOADADDR	  0x84000000
+# define CONFIG_RSA		  /* RSA for FIT authen. */
+#else
+# define CONFIG_LOADADDR	  0x82990000  /* 0x82C0 0000 minus CONFIG_PART_KERNEL_IMG_SIZE see sc_adi_common.h) */
+#endif
+#define CONFIG_DTBLOADADDR	  0x82980000  /* 64 KiB right before CONFIG_LOADADDR */
+#define CONFIG_INITRAMFS_LOADADDR 0x82C00000
+#define CONFIG_MACH_TYPE	  MACH_TYPE_SC572_GEN6
+#define CONFIG_SYS_ARM_CACHE_WRITETHROUGH
+
+/*
+ * Clock Settings
+ *	CCLK = (CLKIN * VCO_MULT) / CCLK_DIV
+ *	SCLK = (CLKIN * VCO_MULT) / SYSCLK_DIV
+ *	SCLK0 = SCLK / SCLK0_DIV
+ *	SCLK1 = SCLK / SCLK1_DIV
+ */
+/* CONFIG_CLKIN_HZ is any value in Hz					*/
+#define CONFIG_CLKIN_HZ			(25000000)
+/* CLKIN_HALF controls the DF bit in PLL_CTL      0 = CLKIN		*/
+/*                                                1 = CLKIN / 2		*/
+#define CONFIG_CLKIN_HALF		(0)
+
+#define CGU_ISSUE
+/* VCO_MULT controls the MSEL (multiplier) bits in PLL_CTL		*/
+/* Values can range from 0-127 (where 0 means 128)			*/
+#define CONFIG_VCO_MULT			(18)
+
+/* CCLK_DIV controls the core clock divider				*/
+/* Values can range from 0-31 (where 0 means 32)			*/
+#define CONFIG_CCLK_DIV			(1)
+/* SCLK_DIV controls the system clock divider				*/
+/* Values can range from 0-31 (where 0 means 32)			*/
+#define CONFIG_SCLK_DIV			(2)
+/* Values can range from 0-7 (where 0 means 8)				*/
+#define CONFIG_SCLK0_DIV		(2)
+#define CONFIG_SCLK1_DIV		(2)
+/* DCLK_DIV controls the DDR clock divider				*/
+/* Values can range from 0-31 (where 0 means 32)			*/
+#define CONFIG_DCLK_DIV			(1)
+/* OCLK_DIV controls the output clock divider				*/
+/* Values can range from 0-127 (where 0 means 128)			*/
+#define CONFIG_OCLK_DIV			(3)
+
+#define CONFIG_VCO_HZ (CONFIG_CLKIN_HZ * CONFIG_VCO_MULT)
+#define CONFIG_CCLK_HZ (CONFIG_VCO_HZ / CONFIG_CCLK_DIV)
+#define CONFIG_SCLK_HZ (CONFIG_VCO_HZ / CONFIG_SCLK_DIV)
+
+#define CONFIG_SYS_TIMERGROUP	TIMER_GROUP
+#define CONFIG_SYS_TIMERBASE	TIMER0_CONFIG
+
+/*
+ * Memory Settings
+ */
+#define MEM_AS4C64M16D3
+
+#define	CONFIG_NR_DRAM_BANKS		1
+#define CONFIG_SYS_SDRAM_BASE	0x82000000
+#define CONFIG_SYS_SDRAM_SIZE	0x6000000
+#define CONFIG_SYS_TEXT_BASE	0x82200000
+#define CONFIG_SYS_LOAD_ADDR	0x0
+#define CONFIG_SYS_INIT_SP_ADDR (CONFIG_SYS_SDRAM_BASE + 0x3f000)
+
+#define CONFIG_SMC_GCTL_VAL	0x00000010
+#define CONFIG_SMC_B0CTL_VAL	0x01007011
+#define CONFIG_SMC_B0TIM_VAL	0x08170977
+#define CONFIG_SMC_B0ETIM_VAL	0x00092231
+
+#define CONFIG_SYS_MONITOR_LEN	(0)
+#define CONFIG_SYS_MALLOC_LEN	(1024 * 1024)
+
+#define CONFIG_SYS_MEMTEST_START 0x82080000
+#define CONFIG_SYS_MEMTEST_END   0x87000000
+
+/*
+ * Network Settings
+ */
+#define ADI_CMDS_NETWORK
+#define CONFIG_NETCONSOLE
+#define CONFIG_NET_MULTI
+#define CONFIG_DTBNAME		"sc57x-gen6.dtb"
+#define CONFIG_HOSTNAME		"gen6"
+#ifndef CONFIG_DESIGNWARE_ETH
+#	define CONFIG_DESIGNWARE_ETH
+#endif
+#define CONFIG_PHY_ADDR		1
+#define CONFIG_PHY_CHECK_RESET
+#define CONFIG_DW_AUTONEG
+#define CONFIG_DW_ALTDESCRIPTOR
+#define CONFIG_DW_AXI_BURST_LEN 16
+#define CONFIG_RMII
+#ifndef CONFIG_PHYLIB
+#	define CONFIG_PHYLIB
+#endif
+#define CONFIG_PHY_MICREL
+#define CONFIG_ETHADDR	02:80:ad:20:31:e8
+
+#define CONFIG_CMD_MII
+#define CONFIG_CMD_NET
+
+/*
+ * I2C Settings
+ */
+#define CONFIG_SYS_I2C
+#define CONFIG_SYS_I2C_ADI
+#define CONFIG_SYS_MAX_I2C_BUS 3
+
+
+/*
+ * SPI Settings
+ */
+#define CONFIG_ADI_SPI3
+#define CONFIG_SC57X_SPI
+#define CONFIG_CMD_SPI
+#define CONFIG_ENV_SPI_MAX_HZ	50000000
+#define CONFIG_SF_DEFAULT_SPEED	50000000
+#define CONFIG_SPI_FLASH
+#define CONFIG_SPI_FLASH_MMAP
+#define CONFIG_SPI_FLASH_WINBOND
+#define CONFIG_SPI_FLASH_SPANSION
+#define CONFIG_SPI_FLASH_ISSI
+
+/*
+ * USB Settings
+ */
+/*#define CONFIG_MUSB_HCD
+#define CONFIG_USB_SC57X
+#define CONFIG_MUSB_TIMEOUT 100000
+#define MUSB_HW_VERSION2
+#define CONFIG_USB_STORAGE*/
+
+/*
+ * Misc Settings
+ */
+#define CONFIG_SYS_NO_FLASH
+#define CONFIG_UART_CONSOLE	0
+#define CONFIG_BAUDRATE		115200
+#define CONFIG_UART4_SERIAL
+#define CONFIG_LINUX_MEMSIZE	"96M"
+#define CONFIG_VERSION_VARIABLE
+#define CONFIG_EPC660
+#define CONFIG_ENV_IS_EMBEDDED_IN_LDR
+#define CONFIG_ENV_IS_IN_SPI_FLASH
+#define CONFIG_ENV_SPI_BUS 2
+#define CONFIG_ENV_SPI_CS 1
+
+/*
+ * Flash Adresses
+ */
+#define CONFIG_FLASH_SIZE		0x01000000 /* 16MB */
+#define CONFIG_PART_ROOTFS_IMG_SIZE	0x00C00000 /* 12MB */
+
+#include <configs/sc_adi_common.h>
+
+#endif
diff --git a/include/configs/sc573-gen6.h b/include/configs/sc573-gen6.h
new file mode 100644
index 0000000000..5edce04223
--- /dev/null
+++ b/include/configs/sc573-gen6.h
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2021 iris-GmbH
+ *
+ * U-boot - Configuration file for sc573 gen6 board by iris-GmbH
+ */
+
+#ifndef __CONFIG_SC573_GEN6_H
+#define __CONFIG_SC573_GEN6_H
+
+#include <asm/arch/config.h>
+
+/*
+ * Processor Settings
+ */
+#define CONFIG_CPU		  "ADSP-SC573"
+#ifdef CONFIG_SC57X_CHAIN_BOOT
+# define CONFIG_LOADADDR	  0x84000000
+# define CONFIG_RSA		  /* RSA for FIT authen. */
+#else
+# define CONFIG_LOADADDR	0x82990000  /* 0x82C0 0000 minus CONFIG_PART_KERNEL_IMG_SIZE see sc_adi_common.h) */
+#endif
+#define CONFIG_DTBLOADADDR	  0x82980000  /* 64 KiB right before CONFIG_LOADADDR */
+#define CONFIG_INITRAMFS_LOADADDR 0x82C00000
+#define CONFIG_MACH_TYPE	  MACH_TYPE_SC573_GEN6
+#define CONFIG_SYS_ARM_CACHE_WRITETHROUGH
+
+/*
+ * Clock Settings
+ *	CCLK = (CLKIN * VCO_MULT) / CCLK_DIV
+ *	SCLK = (CLKIN * VCO_MULT) / SYSCLK_DIV
+ *	SCLK0 = SCLK / SCLK0_DIV
+ *	SCLK1 = SCLK / SCLK1_DIV
+ */
+/* CONFIG_CLKIN_HZ is any value in Hz					*/
+#define CONFIG_CLKIN_HZ			(25000000)
+/* CLKIN_HALF controls the DF bit in PLL_CTL      0 = CLKIN		*/
+/*                                                1 = CLKIN / 2		*/
+#define CONFIG_CLKIN_HALF		(0)
+
+#define CGU_ISSUE
+/* VCO_MULT controls the MSEL (multiplier) bits in PLL_CTL		*/
+/* Values can range from 0-127 (where 0 means 128)			*/
+#define CONFIG_VCO_MULT			(18)
+
+/* CCLK_DIV controls the core clock divider				*/
+/* Values can range from 0-31 (where 0 means 32)			*/
+#define CONFIG_CCLK_DIV			(1)
+/* SCLK_DIV controls the system clock divider				*/
+/* Values can range from 0-31 (where 0 means 32)			*/
+#define CONFIG_SCLK_DIV			(2)
+/* Values can range from 0-7 (where 0 means 8)				*/
+#define CONFIG_SCLK0_DIV		(2)
+#define CONFIG_SCLK1_DIV		(2)
+/* DCLK_DIV controls the DDR clock divider				*/
+/* Values can range from 0-31 (where 0 means 32)			*/
+#define CONFIG_DCLK_DIV			(1)
+/* OCLK_DIV controls the output clock divider				*/
+/* Values can range from 0-127 (where 0 means 128)			*/
+#define CONFIG_OCLK_DIV			(3)
+
+#define CONFIG_VCO_HZ (CONFIG_CLKIN_HZ * CONFIG_VCO_MULT)
+#define CONFIG_CCLK_HZ (CONFIG_VCO_HZ / CONFIG_CCLK_DIV)
+#define CONFIG_SCLK_HZ (CONFIG_VCO_HZ / CONFIG_SCLK_DIV)
+
+#define CONFIG_SYS_TIMERGROUP	TIMER_GROUP
+#define CONFIG_SYS_TIMERBASE	TIMER0_CONFIG
+
+/*
+ * Memory Settings
+ */
+#define MEM_AS4C64M16D3
+
+#define	CONFIG_NR_DRAM_BANKS		1
+#define CONFIG_SYS_SDRAM_BASE	0x82000000
+#define CONFIG_SYS_SDRAM_SIZE	0x6000000
+#define CONFIG_SYS_TEXT_BASE	0x82200000
+#define CONFIG_SYS_LOAD_ADDR	0x0
+#define CONFIG_SYS_INIT_SP_ADDR (CONFIG_SYS_SDRAM_BASE + 0x3f000)
+
+#define CONFIG_SMC_GCTL_VAL	0x00000010
+#define CONFIG_SMC_B0CTL_VAL	0x01007011
+#define CONFIG_SMC_B0TIM_VAL	0x08170977
+#define CONFIG_SMC_B0ETIM_VAL	0x00092231
+
+#define CONFIG_SYS_MONITOR_LEN	(0)
+#define CONFIG_SYS_MALLOC_LEN	(1024 * 1024)
+
+#define CONFIG_SYS_MEMTEST_START 0x82080000
+#define CONFIG_SYS_MEMTEST_END   0x87000000
+
+/*
+ * Network Settings
+ */
+#define ADI_CMDS_NETWORK
+#define CONFIG_NETCONSOLE
+#define CONFIG_NET_MULTI
+#define CONFIG_DTBNAME		"sc57x-gen6.dtb"
+#define CONFIG_HOSTNAME		"gen6"
+#ifndef CONFIG_DESIGNWARE_ETH
+#	define CONFIG_DESIGNWARE_ETH
+#endif
+#define CONFIG_PHY_ADDR		1
+#define CONFIG_PHY_CHECK_RESET
+#define CONFIG_DW_AUTONEG
+#define CONFIG_DW_ALTDESCRIPTOR
+#define CONFIG_DW_AXI_BURST_LEN 16
+#define CONFIG_RMII
+#ifndef CONFIG_PHYLIB
+#	define CONFIG_PHYLIB
+#endif
+#define CONFIG_PHY_MICREL
+#define CONFIG_ETHADDR	02:80:ad:20:31:e8
+
+#define CONFIG_CMD_MII
+#define CONFIG_CMD_NET
+
+/*
+ * I2C Settings
+ */
+#define CONFIG_SYS_I2C
+#define CONFIG_SYS_I2C_ADI
+#define CONFIG_SYS_MAX_I2C_BUS 3
+
+
+/*
+ * SPI Settings
+ */
+#define CONFIG_ADI_SPI3
+#define CONFIG_SC57X_SPI
+#define CONFIG_CMD_SPI
+#define CONFIG_ENV_SPI_MAX_HZ	50000000
+#define CONFIG_SF_DEFAULT_SPEED	50000000
+#define CONFIG_SPI_FLASH
+/*#define CONFIG_SPI_FLASH_MMAP*/
+#define CONFIG_SPI_FLASH_WINBOND
+#define CONFIG_SPI_FLASH_SPANSION
+#define CONFIG_SPI_FLASH_ISSI
+
+/*
+ * USB Settings
+ */
+/*#define CONFIG_MUSB_HCD
+#define CONFIG_USB_SC57X
+#define CONFIG_MUSB_TIMEOUT 100000
+#define MUSB_HW_VERSION2
+#define CONFIG_USB_STORAGE*/
+
+/*
+ * Misc Settings
+ */
+#define CONFIG_SYS_NO_FLASH
+#define CONFIG_UART_CONSOLE	0
+#define CONFIG_BAUDRATE		115200
+#define CONFIG_UART4_SERIAL
+#define CONFIG_LINUX_MEMSIZE	"96M"
+#define CONFIG_VERSION_VARIABLE
+#define CONFIG_EPC660
+#define CONFIG_ENV_IS_EMBEDDED_IN_LDR
+#define CONFIG_ENV_IS_IN_SPI_FLASH
+#define CONFIG_ENV_SPI_BUS 2
+#define CONFIG_ENV_SPI_CS 1
+
+/*
+ * Flash Adresses
+ */
+#define CONFIG_SPI_FLASH_BAR /* enable flash with size greater >16MB */
+#define CONFIG_FLASH_SIZE		0x02000000 /* 32MB */
+
+#include <configs/sc_adi_common.h>
+
+#endif
-- 
2.30.1

