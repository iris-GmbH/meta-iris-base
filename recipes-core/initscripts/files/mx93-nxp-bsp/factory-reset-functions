#!/bin/sh

LAZY_RESET_FLAG="lazy_factory_reset"
vg=matrixlvm

# Determine the alternative userdata volume. Can either be _a or _b
ALT_SUFFIX=$(lvs -S "LV_ATTR !~ 'o' && LV_NAME =~ 'userdata'" -o LV_NAME --noheadings | cut -c11-)
ALT_MNT="/tmp/userdata"

print_info() {
    [ "$1" -eq 0 ] && printf "GOOD"
    [ "$1" -eq 1 ] && printf "OPEN"
    [ "$1" -eq 2 ] && printf "SHORT"
    [ "$1" -eq 3 ] && printf "TEST FAILED"
}

set_flag() {
	touch "/mnt/iris/$LAZY_RESET_FLAG"
}

is_flag_set() {
    ret=1

    # Check if the lazy_factory_reset flag is set on any of the userdata volumes
    mount_alternative_userdata
    if [ -f "/mnt/iris/$LAZY_RESET_FLAG" ] || [ -f "$ALT_MNT/$LAZY_RESET_FLAG" ]; then
        ret=0
    fi
    umount_alternative_userdata

    return "$ret"
}

cable_test_wait_for_completion() {
    j=5
    while [ "$j" -gt 0 ]; do
        usleep 30
        status=$(phytool read eth0/0x1/0x001D)
        [ $((status & 0x8000)) -ne 0 ] || break
        j=$((j-1))
    done
    [ "$j" -gt 0 ] || { echo "[ERROR] self cleared failed -> timeout: $status"; return 1; }
    return 0
}

read_one_pair() {
    # set mdi/mdix
    if [ "$1" -eq 0 ]; then
        phytool write eth0/0x1/0x001F 0xA100 # Disbale auto MDI/MDI-X + set MDI
    else
        phytool write eth0/0x1/0x001F 0xE100 # Disbale auto MDI/MDI-X + set MDIX
    fi
    phytool write eth0/0x1/0x001D 0x8000 # Start cable diagnostic
    cable_test_wait_for_completion || return 1

    ret=$(((status>>13)&0x3))
    [ "$ret" -eq 3 ] && return 1 # test failed
    echo "$ret"
    return 0
}

# KSZ8081 short detection
# Test if the cable pairs 1/2 and 3/6 are shorted
# returns 0 on short, 1 otherwise
short_detected() {
    echo "Start KSZ8081 short check"

    PHY_ID_KSZRNB=0x00221561
    id1=$(phytool read eth0/0x1/0x0002)
    id2=$(phytool read eth0/0x1/0x0003)
    id=$(printf '0x%.8X\n' "$(((id1 << 16) | id2))")
    [ "$((id))" -eq "$((PHY_ID_KSZRNB))" ] || { echo "Error: PHY ID is not supported"; return 1; }

    # Prepare
    phytool write eth0/0x1/0x0000 0x0100 # Disable Autonegotiation + 10Mbps

    # The cable diagnostic might fail due to active link partner.
    # Try harder if link partner is active.
    i=0
    while [ $i -lt 20 ]; do
        # read_one_pair 0: test pair 1/2
        # read_one_pair 1: test pair 3/6
        pair_a=$(read_one_pair 0) && pair_b=$(read_one_pair 1) && break
        i=$(( i + 1 ))
    done

    # Reset
    phytool write eth0/0x1/0x001F 0x8100 # Enable auto MDI/MDI-X
    phytool write eth0/0x1/0x0000 0x3100 # Enable autonegotiation + 100Mbps

    [ "$i" -lt 20 ] || { echo "Error: Max retries reached"; return 1; }

    echo "  A: $pair_a $(print_info "$pair_a")"
    echo "  B: $pair_b $(print_info "$pair_b")"

    if [ "$pair_a" -eq 2 ] && [ "$pair_b" -eq 2 ]; then
        return 0
    fi

    return 1
}

mount_alternative_userdata() {
    mkdir -p ${ALT_MNT}
    dmsetup create "decrypted-${vg}-userdata${ALT_SUFFIX}" --table "0 $(blockdev --getsz "/dev/mapper/${vg}-userdata${ALT_SUFFIX}") crypt aes-cbc-essiv:sha256 :32:trusted:kmk 0 /dev/mapper/${vg}-userdata${ALT_SUFFIX} 0 1 sector_size:4096"
	mount -t ext4 "/dev/mapper/decrypted-${vg}-userdata${ALT_SUFFIX}" "${ALT_MNT}"
}

umount_alternative_userdata() {
    umount "${ALT_MNT}"
    dmsetup remove "decrypted-${vg}-userdata${ALT_SUFFIX}"
	rm -rf ${ALT_MNT}
}

reset_systemtime() {
    date_string=$(cat /etc/timestamp)
    year=$(echo "$date_string" | cut -c 1-4)
    month=$(echo "$date_string" | cut -c 5-6)
    day=$(echo "$date_string" | cut -c 7-8)
    hour=$(echo "$date_string" | cut -c 9-10)
    minute=$(echo "$date_string" | cut -c 11-12)
    second=$(echo "$date_string" | cut -c 13-14)
    date -s "$year-$month-$day $hour:$minute:$second"
    hwclock --systohc
}

reset_userdata() {
    mount_alternative_userdata
    for dir in /mnt/iris "$ALT_MNT"; do
        rm -f  "$dir"/counter/config_customer*
        rm -rf "$dir"/irma6webserver/*
        rm -f  "$dir"/logging/*.sqlite
        rm -f  "$dir"/chrony/chrony.conf
        rm -rf "$dir"/customer
        rm -rf "$dir"/log
        rm -f  "$dir"/*.conf "$dir"/*.conf.bak
        rm -f  "$dir"/rsyslog/*.conf "$dir"/rsyslog/*.conf.bak
        rm -rf "$dir"/device_flags
        rm -f  "$dir"/userdata_synced
        rm -f  "$dir"/timestamp
        rm -rf "$dir"/dropbear

        # Set default symlinks
        ln -sf /etc/nginx/sites-available/reverse_proxy_https.conf "$dir"/nginx/sites-enabled/default_server
        ln -sf /mnt/iris/identity "$dir"/webtls
        ln -sf /mnt/iris/identity "$dir"/nts
        ln -sf /mnt/iris/identity "$dir"/syslogtls
        ln -sf /mnt/iris/identity "$dir"/eaptls

        # Delete custom services
        rm -rf /mnt/iris/services/*

        # Delete lazy flag
        rm -f "$dir/$LAZY_RESET_FLAG"
    done
    umount_alternative_userdata
    sync
}

reset_datastore() {
    rm -rf /mnt/datastore/*
}

factory_reset() {
    echo "Factory reset!"
    reset_systemtime
    reset_userdata
    reset_datastore
}
